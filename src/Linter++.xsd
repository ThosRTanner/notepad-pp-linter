<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Linterpp" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:annotation>
    <xs:documentation>
      This defines the layout of the linter++ configuration.
    </xs:documentation>
  </xs:annotation>

  <xs:simpleType name="byte">
    <xs:annotation>
      <xs:documentation>
        Defines a value between 0 and 255 cos thats how everyone specifies colours...
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="255"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="colour">
    <xs:annotation>
      <xs:documentation>
        A colour is consists of red, green and blue values.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="red" type="byte"/>
      <xs:element name="green" type="byte"/>
      <xs:element name="blue" type="byte"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="presence">
    <xs:annotation>
      <xs:documentation>
        This is used if the presence of a tag implies truth.
      </xs:documentation>
    </xs:annotation>
  </xs:complexType>

  <xs:simpleType name="style">
    <xs:annotation>
      <xs:documentation>
        These are the valid indicator types - see the scintilla documentation.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="box"/>
      <xs:enumeration value="compositionthick"/>
      <xs:enumeration value="compositionthin"/>
      <xs:enumeration value="dash"/>
      <xs:enumeration value="diagonal"/>
      <xs:enumeration value="dotbox"/>
      <xs:enumeration value="dots"/>
      <xs:enumeration value="explorerlink"/>
      <xs:enumeration value="fullbox"/>
      <xs:enumeration value="gradient"/>
      <xs:enumeration value="gradientcentre"/>
      <xs:enumeration value="hidden"/>
      <xs:enumeration value="plain"/>
      <xs:enumeration value="point"/>
      <xs:enumeration value="point_top"/>
      <xs:enumeration value="pointcharacter"/>
      <xs:enumeration value="roundbox"/>
      <xs:enumeration value="squiggle"/>
      <xs:enumeration value="squigglelow"/>
      <xs:enumeration value="squigglepixmap"/>
      <xs:enumeration value="straightbox"/>
      <xs:enumeration value="strike"/>
      <xs:enumeration value="textfore"/>
      <xs:enumeration value="tt"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="indicator">
    <xs:annotation>
      <xs:documentation>
        This controls the display of the indicator placed where an issue is
        detected
      </xs:documentation>
    </xs:annotation>
    <!-- FIXME ENSURE THIS HAS SOMETHING IN IT -->
    <xs:all>
      <xs:element name="style" type="style" minOccurs="0"/>
      <xs:element name="colour" minOccurs="0">
        <xs:complexType>
          <xs:choice>
            <xs:element name="shade" type="colour"/>
            <xs:element name="as_message" type="presence"/>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="fill_opacity" type="byte" minOccurs="0"/>
      <xs:element name="outline_opacity" type="byte" minOccurs="0"/>
      <xs:element name="draw_under" type="presence" minOccurs="0"/>
      <xs:element name="stroke_width" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:decimal">
            <xs:fractionDigits fixed="true" value="2" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="hover" minOccurs="0">
        <xs:complexType>
          <!-- FIXME ENSURE THIS HAS SOMETHING IN IT -->
          <xs:all>
            <xs:element name="style" type="style" minOccurs="0"/>
            <xs:element name="colour" type="colour" minOccurs="0"/>
          </xs:all>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="messages">
    <xs:annotation>
      <xs:documentation>
        This enables you to specify the the colours in which messages will be
        displayed. If you don't define a colour, a default colour will be used.
      </xs:documentation>
    </xs:annotation>
    <!-- FIXME ENSURE THIS HAS SOMETHING IN IT -->
    <xs:all>
      <xs:element name="default" type="colour" minOccurs="0"/>
      <xs:element name="error" type="colour" minOccurs="0"/>
      <xs:element name="warning" type="colour" minOccurs="0"/>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="key">
    <xs:annotation>
      <xs:documentation>
        A consists of optional modifiers (ctrl, alt, shift) and a single
        virtual key. Other keys may be added to the list.

        Note that although you can change these while notepad++ is running,
        notepad++ will only read the settings at startup, so the changes
        won't take effect till you quit and restart.
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="ctrl" type="presence" minOccurs="0"/>
      <xs:element name="alt" type="presence" minOccurs="0"/>
      <xs:element name="shift" type="presence" minOccurs="0"/>
      <xs:element name="key">
        <xs:simpleType>
          <xs:union>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="[a-zA-Z0-9]"/>
                <xs:pattern value="F[1-9]"/>
                <xs:pattern value="F1[0-2]"/>
                <xs:pattern value="NUMPAD[0-9]"/>
              </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="INSERT"/>
                <xs:enumeration value="DELETE"/>
                <xs:enumeration value="HOME"/>
                <xs:enumeration value="END"/>
                <xs:enumeration value="PAGE UP"/>
                <xs:enumeration value="PAGE DOWN"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:union>
        </xs:simpleType>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="shortcuts">
    <xs:annotation>
      <xs:documentation>
        A list of menu shortcuts
      </xs:documentation>
    </xs:annotation>
    <!-- FIXME ENSURE THIS HAS SOMETHING IN IT -->
    <xs:all>
      <xs:element name="edit" type="key" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Shortcut for 'Edit config'
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="show" type="key" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Shortcut for 'Show linter results'
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="previous" type="key" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Shortcut for 'Show previous message'
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="next" type="key" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Shortcut for 'Show next message'
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="enabled" type="key" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Shortcut for 'Enabled' toggle
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:simpleType name="extension">
    <xs:annotation>
      <xs:documentation>
        A file extension is a string starting with a .
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[.][^.]*"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="extensions">
    <xs:annotation>
      <xs:documentation>
        A list of extensions.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="extension" type="extension"/>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="nonemptystring">
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="command">
    <xs:annotation>
      <xs:documentation>
        A command consists of a program to run and its arguments.

        Note that whitespace and newlines will be collapsed in the args
        element.

        You can use windows environment variables in these strings (e.g.
        %TMPDIR%, %APPDATA%) as well as the following:

        %LINTER_TARGET% - temp linter file
        %TARGET% - original file
        %TARGET_DIR% - directory of file
        %TARGET_EXT% - extension of file
        %TARGET_FILENAME% - filename of file

        The args element will accept %% as the last two characters as a
        shortcut for "%LINTER_TARGET%". You'll also need to ensure everything
        is properly double quoted - it's best to put "" round any use of an
        environment variable.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="program" type="nonemptystring"/>
      <xs:element name="args" type="xs:token"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="commands">
    <xs:annotation>
      <xs:documentation>
        A list of commands to execute.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="command" type="command"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="linter">
    <xs:annotation>
      <xs:documentation>
        A linter consists of a list of extensions and the command to run
        to lint a file that matches any of those extensions.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="extensions" type="extensions"/>
      <xs:element name="commands" type="commands"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="linters">
    <xs:annotation>
      <xs:documentation>
        A list of linters.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="linter" type="linter"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="variable">
    <xs:annotation>
      <xs:documentation>
        A variable is a name and a command to run. When the command is run,
        the contents of STDOUT are stored as the variable value.

        You can use the value of an existing variable when calculating a new
        one if you wish, but note that variables are evaluated in the order
        they're defined in the xml.

        At the moment the effect of output to STDERR or non-zero return codes
        are not well defined.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="name" type="nonemptystring"/>
      <xs:element name="command" type="command"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="variables">
    <xs:annotation>
      <xs:documentation>
        You can set up variable values in this section - the given command is
        run and the contents of STDOUT are stored as the variable value.

        The values are used when evaluating commands and arguments, they are
        not passed to the called program. They are however evaluated for each
        file when it is linted.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="variable" type="variable"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="misc">
    <xs:annotation>
      <xs:documentation>
        A bunch of miscellaneous configurable items.
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="disabled" type="presence" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            If present, then plugin will be inactive on startup.
          </xs:documentation>
        </xs:annotation>        
      </xs:element>
    </xs:all>
  </xs:complexType>
  
  <xs:element name="LinterPP">
    <xs:annotation>
      <xs:documentation>
        Linter configuration consists of a list of linters, and
        optionally message colours and indicator setup.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:all>
        <xs:element name="linters" type="linters"/>
        <xs:element name="shortcuts" type="shortcuts" minOccurs="0"/>
        <xs:element name="messages" type="messages" minOccurs="0"/>
        <xs:element name="indicator" type="indicator" minOccurs="0"/>
        <xs:element name="variables" type="variables" minOccurs="0"/>
        <xs:element name="misc" type="misc" minOccurs="0"/>
      </xs:all>
    </xs:complexType>
  </xs:element>
</xs:schema>
